@page "/Projects"

@using Homepage.GlobalDefinitions.Collections
@using System.Text.Json
@using System.Net.Http.Headers;

@inject Microsoft.Extensions.Configuration.IConfiguration config

@inject IHttpClientFactory http

<section class="projects">
    <div class="projects-title">
        <h4>Beispiel Projekte</h4>
        <hr />
    </div>
    @for (int e = 0; e < listProjects.Count; e++)
    {
        <div class="card mb-3">
            <div id="@listProjects[e].Name" class="carousel slide" data-ride="carousel">
                <ol class="carousel-indicators">
                    <li data-target="#carouselExampleIndicators" data-slide-to="0" class="active"></li>
                    <li data-target="#carouselExampleIndicators" data-slide-to="1"></li>
                    <li data-target="#carouselExampleIndicators" data-slide-to="2"></li>
                </ol>
                <div class="carousel-inner">
                    @for (int i = 0; i < listProjects[e].ListProjectImages.Count; i++)
                    {
                        if (i == 0)
                        {
                            <div class="carousel-item active">
                                <img class="d-block w-100" src="/@listProjects[e].ListProjectImages[i].Image" alt="Projekt Bild">
                            </div>
                        }
                        else
                        {
                            <div class="carousel-item">
                                <img class="d-block w-100" src="/@listProjects[e].ListProjectImages[i].Image" alt="Projekt Bild">
                            </div>
                        }
                    }
                </div>
                <a class="carousel-control-prev" href="#@listProjects[e].Name" role="button" data-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="sr-only">Previous</span>
                </a>
                <a class="carousel-control-next" href="#@listProjects[e].Name" role="button" data-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="sr-only">Next</span>
                </a>
            </div>
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <h5 class="card-title">@listProjects[e].Name</h5>
                    @if (!string.IsNullOrEmpty(listProjects[e].Live))
                    {
                        <a class="btn btn-primary" target="_blank" href="@listProjects[e].Live" role="button"><i class="fa fa-angle-double-right"></i> Mockup Live</a>
                    }
                </div>
                <p class="card-text">@listProjects[e].Description</p>
            </div>
        </div>
    }
</section>

@code{
    List<ListProjects> listProjects = new List<ListProjects>();

    protected override void OnAfterRender(bool firstRender)
    {
        LoadProjects();

        StateHasChanged();
    }

    public void LoadProjects()
    {
        string restService = config.GetSection("APIServices")["apiURL"].ToString();
        string restUser = config.GetSection("APIServices")["apiUsername"].ToString();
        string restPassword = config.GetSection("APIServices")["apiPassword"].ToString();
        var client = http.CreateClient();

        client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(
        "Basic", Convert.ToBase64String(
            System.Text.ASCIIEncoding.ASCII.GetBytes(
               $"" + restUser + ":" + restPassword + "")));

        var result = client.GetAsync("" + restService + "/api/Project/GetProjects").Result;

        if (result.IsSuccessStatusCode)
        {
            var data = result.Content.ReadAsStringAsync().Result;

            listProjects = JsonSerializer.Deserialize<List<ListProjects>>(data);
        }
    }
}